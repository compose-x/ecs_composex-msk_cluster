version: "3.8"

x-msk_cluster:
  new-cluster:
    Properties:
      ClusterName: ClusterWithRequiredProperties
      KafkaVersion: "3.3.1"
      NumberOfBrokerNodes: 3
      BrokerNodeGroupInfo:
        InstanceType: "kafka.m5.large"
        ClientSubnets:
           - x-vpc::vpc::StorageSubnets
      EncryptionInfo:
        EncryptionAtRest:
          DataVolumeKMSKeyId: x-kms::msk-encryption-key::Arn
    Services:
      nginx:
        Access: RW
        ReturnValues: {}

  another-new-cluster:
    Properties:
      ClusterName: ClusterWithAllProperties
      KafkaVersion: 2.2.1
      NumberOfBrokerNodes: 3
      EnhancedMonitoring: PER_BROKER
      EncryptionInfo:
        EncryptionAtRest:
          DataVolumeKMSKeyId: x-kms::msk-encryption-key::Arn
          EncryptionInTransit:
            ClientBroker: TLS
            InCluster: true
      OpenMonitoring:
        Prometheus:
          JmxExporter:
            EnabledInBroker: "true"
          NodeExporter:
            EnabledInBroker: "true"
      ConfigurationInfo:
        Arn: ReplaceWithConfigurationArn
        Revision: 1
      Tags:
        Environment: Test
        Owner: QATeam
      BrokerNodeGroupInfo:
        BrokerAZDistribution: DEFAULT
        InstanceType: kafka.m5.large
        SecurityGroups:
          - ReplaceWithSecurityGroupId
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 100
        ClientSubnets:
          - x-vpc::vpc::AppSubnets

x-kms:
  msk-encryption-key:
    Properties: {}
    MacroParameters:
      Alias: alias/msk/testing-encryption-key
